# ExperimentalPlatform
[Unit]
Description=Initial Protonet Soul Configuration
ConditionPathExists=/etc/protonet/soul/enabled
After=skvs-protonet.service elasticsearch.service mysql.service rabbitmq.service redis.service
Requires=skvs-protonet.service elasticsearch.service mysql.service rabbitmq.service redis.service

[Service]
TimeoutStartSec=0
Type=oneshot
KillMode=none
RemainAfterExit=yes
ExecStartPre=/bin/mkdir -p /data/soul
ExecStartPre=/opt/bin/rabbitmq-manager -create german-shepherd
ExecStartPre=-/usr/bin/docker rm -f soul-prepare
ExecStartPre=/usr/bin/env bash -c "/usr/bin/docker run -d \
               --name soul-prepare \
               --net=protonet \
               --env \"RABBITMQ_URL=$(/opt/bin/skvs_cli get app/german-shepherd/rabbitmq)\" \
               --env \"RAILS_ENV=production\" \
               --env \"RACK_ENV=production\" \
               --env \"DATABASE_URL=mysql2://root:s3kr3t@mysql:3306/german-shepherd?pool=30&encoding=utf8&reconnect=true\" \
               --volume /data/soul:/home/protonet/dashboard/shared/ \
               --volume /data/hardware:/tmp/hardware \
               quay.io/protonetinc/german-shepherd:{{tag}} \
               bundle exec rake docker:prepare"
ExecStart=/usr/bin/docker logs -f soul-prepare
ExecStop=/usr/bin/docker stop soul-prepare
ExecStopPost=/usr/bin/docker stop soul-prepare

[Install]
WantedBy=multi-user.target
