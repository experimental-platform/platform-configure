# ExperimentalPlatform
[Unit]
Description=Protonet Soul Dispatcher Service
ConditionPathExists=/etc/protonet/soul/enabled
After=soul-prepare.service
Requires=soul-prepare.service

[Service]
TimeoutStartSec=0
TimeoutStopSec=15
Restart=always
RestartSec=5s
ExecStartPre=-/usr/bin/docker rm -f soul-dispatcher
ExecStartPre=-/usr/bin/chown 1000:1000 -R /data/samba/
ExecStartPre=-/usr/bin/chmod 644 /data/samba/etc/smbpasswd
ExecStartPre=/usr/bin/env bash -c "/usr/bin/docker run -d \
  --name soul-dispatcher \
  --net=protonet \
  --env \"RABBITMQ_URL=$(/opt/bin/skvs_cli get app/german-shepherd/rabbitmq)\" \
  --env \"RAILS_ENV=production\" \
  --env \"RACK_ENV=production\" \
  --env \"DATABASE_URL=mysql2://root:s3kr3t@mysql:3306/german-shepherd?pool=30&encoding=utf8&reconnect=true\" \
  --volume /data/soul:/home/protonet/dashboard/shared/ \
  --volume /data/samba/etc:/etc/samba/ \
  --volume /data/samba/extrausers:/var/lib/extrausers/ \
  --volume /data/hardware:/tmp/hardware \
  quay.io/protonetinc/german-shepherd:{{tag}} \
  bundle exec foreman start dispatcher"
ExecStart=/usr/bin/docker logs -f soul-dispatcher
ExecStop=/usr/bin/docker stop soul-dispatcher
ExecStopPost=/usr/bin/docker stop soul-dispatcher

[Install]
WantedBy=multi-user.target
